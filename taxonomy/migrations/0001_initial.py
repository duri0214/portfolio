# Generated by Django 5.1 on 2025-03-08 07:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("soil_analysis", "0002_alter_jmawarning_unique_together_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Classification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_en", models.CharField(max_length=255)),
                ("remark", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "taxonomy_m_classification",
            },
        ),
        migrations.CreateModel(
            name="FeedWeight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="飼料重量に対応する名前 (例: 通常量, 少量)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(help_text="飼料の重量 (単位: g)", unique=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HenGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="鶏グループの名前 (例: 農場A, ロット1など)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "hen_count",
                    models.IntegerField(
                        help_text="このグループ内のメスの鶏の羽数 (単位: 羽)"
                    ),
                ),
                (
                    "remark",
                    models.TextField(blank=True, help_text="備考や補足説明", null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Kingdom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_en", models.CharField(max_length=255)),
                ("remark", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "taxonomy_m_kingdom",
            },
        ),
        migrations.CreateModel(
            name="NaturalMonument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("remark", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "taxonomy_m_natural_monument",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("remark", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "taxonomy_m_tag",
            },
        ),
        migrations.CreateModel(
            name="Family",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_en", models.CharField(max_length=255)),
                ("remark", models.CharField(max_length=255, null=True)),
                (
                    "classification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxonomy.classification",
                    ),
                ),
            ],
            options={
                "db_table": "taxonomy_m_family",
            },
        ),
        migrations.CreateModel(
            name="Genus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_en", models.CharField(max_length=255)),
                ("remark", models.CharField(max_length=255, null=True)),
                (
                    "family",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxonomy.family",
                    ),
                ),
            ],
            options={
                "db_table": "taxonomy_m_genus",
            },
        ),
        migrations.CreateModel(
            name="EggLedger",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recorded_date",
                    models.DateField(
                        help_text="データを記録した日付 (形式: YYYY-MM-DD)"
                    ),
                ),
                (
                    "temperature",
                    models.FloatField(help_text="気温 (単位: °C)", null=True),
                ),
                ("humidity", models.FloatField(help_text="湿度 (単位: %)", null=True)),
                (
                    "pressure",
                    models.FloatField(help_text="気圧 (単位: hPa)", null=True),
                ),
                (
                    "rainfall",
                    models.FloatField(help_text="降水量 (単位: mm)", null=True),
                ),
                (
                    "egg_count",
                    models.IntegerField(help_text="産卵数 (単位: 個)", null=True),
                ),
                (
                    "avg_egg_weight",
                    models.FloatField(help_text="卵の平均重量 (単位: g)", null=True),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="自由記述フィールド。産卵に関するコメントや観察記録を記入",
                        null=True,
                    ),
                ),
                (
                    "weather_code",
                    models.ForeignKey(
                        help_text="天気コード。天気マスタ (JmaWeatherCode)とのリレーション",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="soil_analysis.jmaweathercode",
                        to_field="code",
                    ),
                ),
                (
                    "feed_weight",
                    models.ForeignKey(
                        help_text="飼料の重量マスタ（飼料重量と分類名）とのリレーション",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="taxonomy.feedweight",
                    ),
                ),
                (
                    "hen_group",
                    models.ForeignKey(
                        help_text="この記録に該当する鶏グループとのリレーション",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="taxonomy.hengroup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Phylum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_en", models.CharField(max_length=255)),
                ("remark", models.CharField(max_length=255, null=True)),
                (
                    "kingdom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxonomy.kingdom",
                    ),
                ),
            ],
            options={
                "db_table": "taxonomy_m_phylum",
            },
        ),
        migrations.AddField(
            model_name="classification",
            name="phylum",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="taxonomy.phylum"
            ),
        ),
        migrations.CreateModel(
            name="Species",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_en", models.CharField(max_length=255)),
                ("remark", models.CharField(max_length=255, null=True)),
                (
                    "genus",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxonomy.genus"
                    ),
                ),
            ],
            options={
                "db_table": "taxonomy_m_species",
            },
        ),
        migrations.CreateModel(
            name="Breed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_kana", models.CharField(max_length=255)),
                ("image", models.ImageField(upload_to="taxonomy/breed")),
                ("remark", models.CharField(max_length=255, null=True)),
                (
                    "natural_monument",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxonomy.naturalmonument",
                    ),
                ),
                (
                    "species",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxonomy.species",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BreedTags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "breed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxonomy.breed"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxonomy.tag"
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="breed",
            constraint=models.UniqueConstraint(
                fields=("species", "name"), name="species_name_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="breedtags",
            constraint=models.UniqueConstraint(
                fields=("breed", "tag"), name="breed_tag_unique"
            ),
        ),
    ]
